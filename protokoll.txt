The traffic message si defined as following:

Byte number: 0           1              2,3   4,5        6,7
            +------------+--------------+-----+----------+-------------+
            | message id | one time key | sum | pin code | card number |
            +------------+--------------+-----+----------+-------------+

In more detail, NetworkMessage is the message that is sent over the network:
    typedef struct {
	    uint8_t message_id;
	    uint8_t onetimecode;
	    uint16_t sum;
	    uint16_t pin;
	    uint16_t card_number;
    } NetworkMessage;

Every integer longer than one byte is sent in network byte order.

Traffic messages:
There are four traffic messages and the corresponding message_id value:

+----------+------------+
| Name     | message_id |
+----------+------------+
| no       | 0          |
| balance  | 1          |
| withdraw | 2          |
| deposit  | 3          |
+----------+------------+ 

No:
message_id is set to 0, the other fields are ignored by the client and the
server. A no message is sent when something is not allowed, for example whilst
the pin code is incorrect or when the user is trying to withdraw too much money
from the account.

Balance:
Balance is sent when the user wants to see the balance on the account.  
message_id is 1 and pin and card_number is set to the correct values. If the 
pin/card_number values are correct, the server replies with a balance message
with sum indicating the balance on the account. If the pin/card_number values
are not correct, the server replies with a no message.


Withdraw:
Is sent when the user wants to withdraw money. The pin/card_number values are
set by the client and message_id is 3. The amount the user wants to withdraw is
set in sum. If the account is not being overdrawn, the server replies with the
same message that was sent by the client. Else a no message is sent.

Deposit:
Sent when the user wants to deposit money. The client sets pin/card_number/sum.
The server updates the account and responds with the same message. On error a 
no message is sent.

Update messages:
There are three update messages (all are based on NetworkMessage):

+----------------+------------+----------------+
| Name           | message_id | direction      |
+----------------+------------+----------------+
| atm_key        | 4          | client->server |
| language_add   | 5          | manage->client |
| welcome_update | 6          | manage->client |
+----------------+------------+----------------+

Additionally there is a NetworkString message: First a single byte is sent with
the length of the following string, then in a second package the string data is
sent.

Language_add:
message_id is set to 4 and sum is set to the number of following translation
strings. Then that number of network strings are sent in the order the strings
appear in queryStrings:
    #define STRING_COUNT 20
    char *queryStrings[STRING_COUNT] = {
	    "Language code: ",
	    "Language name: ",
	    "Balance command: ",
	    "Deposit command: ",
	    "Withdraw command: ",
	    "Help command: ",
	    "Unknown command: ",
	    "Balance error: ",
	    "Dedposit error: ",
	    "Withdraw error: ",
	    "Welcome message: ",
	    "Balance message: ",
	    "Desposit message: ",
	    "Withdraw message: ",
	    "Help message: ",
	    "Enter amount requst: ",
	    "Enter one time key request: ",
	    "Enter card number request: ",
	    "Enter pin request: ",
    };
The client is the to expect (currently) 20 network strings.

Welcome_update:
message_id is set to 6 and sum the number of following network strings. The 
first network string tells the client which language code to update the welcome
message on, the second network string defines the new welcome message.

Scenario when asking for balance:

    Client                    Server                      Server
+------------------+       +-----------+            +------------------+
| BALANCE          |      ++           ++  +-----+  | BALANCE          |
| id=1             +->>>>-+ is pin and  +>>| YES |>>+ id=1             |
| pin=1234         |      | card number |  +-----+  | pin=1234         |
| card_number=1000 |      ++  valid?   ++           | card_number=1000 |
+------------------+       +----++-----+            | sum=500          |
                                vv                  +--------+---------+
+------------------+            vv                           v
| Could not get    |         +--++--+                        v
| balance.         +---------+  NO  |                        v
|                  |         +------+                        v
+------------------+                                         v
                                                             v
+--------------+                                             v
| Balance: 500 +<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+
+--------------+ 
